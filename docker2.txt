# ========================
# Etapa base
# ========================
FROM node:20-alpine AS base

# Dependências de sistema necessárias
RUN apk add --no-cache libc6-compat openssl3 openssl-dev libssl3

# ========================
# Etapa 1: Dependências
# ========================
FROM base AS deps
WORKDIR /app

# Copia lockfiles
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./

# Instala dependências conforme lockfile
RUN \
  if [ -f yarn.lock ]; then yarn --frozen-lockfile; \
  elif [ -f package-lock.json ]; then npm ci; \
  elif [ -f pnpm-lock.yaml ]; then yarn global add pnpm && pnpm i --frozen-lockfile; \
  else echo "Lockfile not found." && exit 1; \
  fi

# ========================
# Etapa 2: Build
# ========================
FROM base AS builder
WORKDIR /app

# Copia dependências
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Copia variáveis de ambiente específicas de produção
COPY .env.production .env

# Build Next.js
RUN if [ -f yarn.lock ]; then yarn build; \
    elif [ -f package-lock.json ]; then npm run build; \
    elif [ -f pnpm-lock.yaml ]; then pnpm build; \
    else echo "Lockfile not found." && exit 1; \
    fi

# ========================
# Etapa 3: Runner (produção)
# ========================
FROM base AS runner
WORKDIR /app
ENV NODE_ENV=production

# Porta padrão do Next.js
ENV PORT=3001
ENV HOSTNAME=0.0.0.0

# Variáveis para URLs públicas
ENV BASE_URL=https://nowastev2-homologa.dikmadigital.com.br
ENV NEXT_PUBLIC_BASE_URL=https://nowastev2-homologa.dikmadigital.com.br

# Cria usuário não-root
RUN addgroup --system --gid 1001 nodejs \
    && adduser --system --uid 1001 nextjs

# Copia build
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next ./.next

# Ajusta permissões
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expõe porta correta
EXPOSE 3001

# Comando de start
CMD ["npx", "next", "start", "-p", "3001", "-H", "0.0.0.0"]
